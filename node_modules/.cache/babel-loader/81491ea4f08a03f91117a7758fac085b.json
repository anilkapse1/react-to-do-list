{"ast":null,"code":"var _jsxFileName = \"E:\\\\project\\\\react\\\\react-to-do-list\\\\src\\\\Test.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport AddCircleSharpIcon from '@material-ui/icons/AddCircleSharp';\nimport TextField from '@material-ui/core/TextField';\nimport HighlightOffSharpIcon from '@material-ui/icons/HighlightOffSharp';\nimport { green } from '@material-ui/core/colors';\nimport './Test.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Test = () => {\n  _s();\n\n  const [getList, setList] = useState(\"\");\n  const [newGetList, newSetList] = useState([]);\n\n  const fetchValue = e => {\n    setList(e.target.value);\n  };\n\n  const addList = () => {\n    if (getList != \"\") {\n      newSetList(oldvalue => {\n        return [...oldvalue, getList];\n      });\n    } else {\n      return false;\n    }\n\n    setList(\"\");\n  };\n\n  const removeList = e => {\n    newSetList(oldvalue => {\n      return oldvalue.filter((value, index) => {\n        return index !== e;\n      });\n    });\n  };\n\n  let date = new Date().toLocaleDateString();\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    class: \"ctm-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: date\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      class: \"add-section\",\n      children: [/*#__PURE__*/_jsxDEV(TextField, {\n        id: \"standard-basic\",\n        value: getList,\n        label: \"Add List\",\n        name: \"list\",\n        onChange: fetchValue\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(AddCircleSharpIcon, {\n        color: \"primary\",\n        onClick: addList\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      class: \"list-section\",\n      children: /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: newGetList.map((value, index) => {\n          return /*#__PURE__*/_jsxDEV(\"div\", {\n            class: \"list\",\n            children: [/*#__PURE__*/_jsxDEV(\"li\", {\n              children: value\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 55,\n              columnNumber: 32\n            }, this), /*#__PURE__*/_jsxDEV(HighlightOffSharpIcon, {\n              color: \"secondary\",\n              onClick: () => removeList(index)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 56,\n              columnNumber: 32\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 54,\n            columnNumber: 28\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 16\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 43,\n    columnNumber: 11\n  }, this);\n};\n\n_s(Test, \"9cfDLl9WREzPTnxKwUryCwb43QU=\");\n\n_c = Test;\nexport default Test;\n\nvar _c;\n\n$RefreshReg$(_c, \"Test\");","map":{"version":3,"sources":["E:/project/react/react-to-do-list/src/Test.js"],"names":["React","useState","AddCircleSharpIcon","TextField","HighlightOffSharpIcon","green","Test","getList","setList","newGetList","newSetList","fetchValue","e","target","value","addList","oldvalue","removeList","filter","index","date","Date","toLocaleDateString","map"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,kBAAP,MAA+B,mCAA/B;AACA,OAAOC,SAAP,MAAsB,6BAAtB;AACA,OAAOC,qBAAP,MAAkC,sCAAlC;AACA,SAASC,KAAT,QAAsB,0BAAtB;AAEA,OAAO,YAAP;;;AAGA,MAAMC,IAAI,GAAC,MAAI;AAAA;;AAGX,QAAM,CAACC,OAAD,EAAUC,OAAV,IAAqBP,QAAQ,CAAC,EAAD,CAAnC;AACA,QAAM,CAACQ,UAAD,EAAaC,UAAb,IAA2BT,QAAQ,CAAC,EAAD,CAAzC;;AAEA,QAAMU,UAAU,GAAEC,CAAD,IAAK;AAClBJ,IAAAA,OAAO,CAACI,CAAC,CAACC,MAAF,CAASC,KAAV,CAAP;AACH,GAFD;;AAIA,QAAMC,OAAO,GAAC,MAAI;AACd,QAAGR,OAAO,IAAE,EAAZ,EAAe;AACXG,MAAAA,UAAU,CAAEM,QAAD,IAAY;AACnB,eAAO,CAAC,GAAGA,QAAJ,EAAaT,OAAb,CAAP;AACH,OAFS,CAAV;AAGH,KAJD,MAIK;AACD,aAAO,KAAP;AACH;;AAEDC,IAAAA,OAAO,CAAC,EAAD,CAAP;AACH,GAVD;;AAYA,QAAMS,UAAU,GAAEL,CAAD,IAAK;AAClBF,IAAAA,UAAU,CAAEM,QAAD,IAAY;AACnB,aAAOA,QAAQ,CAACE,MAAT,CAAgB,CAACJ,KAAD,EAAOK,KAAP,KAAe;AAClC,eAAOA,KAAK,KAAGP,CAAf;AACH,OAFM,CAAP;AAGH,KAJS,CAAV;AAKH,GAND;;AAQA,MAAIQ,IAAI,GAAG,IAAIC,IAAJ,GAAWC,kBAAX,EAAX;AAEA,sBACM;AAAK,IAAA,KAAK,EAAC,eAAX;AAAA,4BACE;AAAA,gBAAKF;AAAL;AAAA;AAAA;AAAA;AAAA,YADF,eAEE;AAAK,MAAA,KAAK,EAAC,aAAX;AAAA,8BACI,QAAC,SAAD;AAAW,QAAA,EAAE,EAAC,gBAAd;AAA+B,QAAA,KAAK,EAAEb,OAAtC;AAA+C,QAAA,KAAK,EAAC,UAArD;AAAgE,QAAA,IAAI,EAAC,MAArE;AAA4E,QAAA,QAAQ,EAAEI;AAAtF;AAAA;AAAA;AAAA;AAAA,cADJ,eAEQ,QAAC,kBAAD;AAAqB,QAAA,KAAK,EAAC,SAA3B;AAAqC,QAAA,OAAO,EAAEI;AAA9C;AAAA;AAAA;AAAA;AAAA,cAFR;AAAA;AAAA;AAAA;AAAA;AAAA,YAFF,eAOE;AAAK,MAAA,KAAK,EAAC,cAAX;AAAA,6BACG;AAAA,kBACMN,UAAU,CAACc,GAAX,CAAe,CAACT,KAAD,EAAOK,KAAP,KAAe;AAC/B,8BACO;AAAK,YAAA,KAAK,EAAC,MAAX;AAAA,oCACI;AAAA,wBAAKL;AAAL;AAAA;AAAA;AAAA;AAAA,oBADJ,eAEI,QAAC,qBAAD;AAAwB,cAAA,KAAK,EAAC,WAA9B;AAA0C,cAAA,OAAO,EAAE,MAAIG,UAAU,CAACE,KAAD;AAAjE;AAAA;AAAA;AAAA;AAAA,oBAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,kBADP;AAMC,SAPA;AADN;AAAA;AAAA;AAAA;AAAA;AADH;AAAA;AAAA;AAAA;AAAA,YAPF;AAAA;AAAA;AAAA;AAAA;AAAA,UADN;AAsBH,CAtDD;;GAAMb,I;;KAAAA,I;AAwDN,eAAeA,IAAf","sourcesContent":["import React, { useState } from 'react';\r\nimport AddCircleSharpIcon from '@material-ui/icons/AddCircleSharp';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport HighlightOffSharpIcon from '@material-ui/icons/HighlightOffSharp';\r\nimport { green } from '@material-ui/core/colors';\r\n\r\nimport './Test.css';\r\n\r\n\r\nconst Test=()=>{\r\n\r\n\r\n    const [getList, setList] = useState(\"\");\r\n    const [newGetList, newSetList] = useState([]);\r\n\r\n    const fetchValue=(e)=>{\r\n        setList(e.target.value);\r\n    }\r\n\r\n    const addList=()=>{\r\n        if(getList!=\"\"){\r\n            newSetList((oldvalue)=>{\r\n                return [...oldvalue,getList]\r\n            })\r\n        }else{\r\n            return false;\r\n        }\r\n\r\n        setList(\"\");\r\n    }\r\n\r\n    const removeList=(e)=>{\r\n        newSetList((oldvalue)=>{\r\n            return oldvalue.filter((value,index)=>{\r\n                return index!==e;\r\n            })\r\n        })\r\n    }\r\n\r\n    let date = new Date().toLocaleDateString();\r\n\r\n    return (\r\n          <div class=\"ctm-container\"> \r\n            <h1>{date}</h1>\r\n            <div class=\"add-section\">\r\n                <TextField id=\"standard-basic\" value={getList} label=\"Add List\" name=\"list\" onChange={fetchValue}/>\r\n                    <AddCircleSharpIcon  color=\"primary\" onClick={addList}/>\r\n            </div>\r\n\r\n            <div class=\"list-section\">\r\n               <ul>\r\n                    {newGetList.map((value,index)=>{\r\n                    return(\r\n                           <div class=\"list\">\r\n                               <li>{value}</li>\r\n                               <HighlightOffSharpIcon  color=\"secondary\" onClick={()=>removeList(index)} />\r\n                           </div> \r\n                    )\r\n                    })}\r\n               </ul> \r\n             </div>  \r\n          </div> \r\n    )\r\n}\r\n\r\nexport default Test;"]},"metadata":{},"sourceType":"module"}