{"version":3,"sources":["Test.js","App.js","reportWebVitals.js","index.js"],"names":["Test","useState","getList","setList","newGetList","newSetList","date","Date","toLocaleDateString","class","TextField","id","value","label","name","onChange","e","target","color","onClick","oldvalue","map","index","filter","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"0SAiEeA,EAxDJ,WAAK,IAAD,EAGgBC,mBAAS,IAHzB,mBAGJC,EAHI,KAGKC,EAHL,OAIsBF,mBAAS,IAJ/B,mBAIJG,EAJI,KAIQC,EAJR,KA8BPC,GAAO,IAAIC,MAAOC,qBAEtB,OACM,sBAAKC,MAAM,gBAAX,UACE,6BAAKH,IACL,sBAAKG,MAAM,cAAX,UACI,cAACC,EAAA,EAAD,CAAWC,GAAG,iBAAiBC,MAAOV,EAASW,MAAM,WAAWC,KAAK,OAAOC,SA9BvE,SAACC,GACdb,EAAQa,EAAEC,OAAOL,UA8BL,cAAC,IAAD,CAAqBM,MAAM,UAAUC,QA3BvC,WACV,GAAY,IAATjB,EAKC,OAAO,EAJPG,GAAW,SAACe,GACR,MAAM,GAAN,mBAAWA,GAAX,CAAoBlB,OAM5BC,EAAQ,UAqBJ,qBAAKM,MAAM,eAAX,SACG,6BACML,EAAWiB,KAAI,SAACT,EAAMU,GACvB,OACO,sBAAKb,MAAM,OAAX,UACI,6BAAKG,IACL,cAAC,IAAD,CAAwBM,MAAM,YAAYC,QAAS,kBAxB5DH,EAwB2EM,OAvBzFjB,GAAW,SAACe,GACR,OAAOA,EAASG,QAAO,SAACX,EAAMU,GAC1B,OAAOA,IAAQN,QAHV,IAACA,mBCnBPQ,EARL,WACN,OACI,mCACI,cAAC,EAAD,OCKGC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.8e48586b.chunk.js","sourcesContent":["import React, { useState } from 'react';\r\nimport AddCircleSharpIcon from '@material-ui/icons/AddCircleSharp';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport HighlightOffSharpIcon from '@material-ui/icons/HighlightOffSharp';\r\nimport { green } from '@material-ui/core/colors';\r\n\r\nimport './Test.css';\r\n\r\n\r\nconst Test=()=>{\r\n\r\n\r\n    const [getList, setList] = useState(\"\");\r\n    const [newGetList, newSetList] = useState([]);\r\n\r\n    const fetchValue=(e)=>{\r\n        setList(e.target.value);\r\n    }\r\n\r\n    const addList=()=>{\r\n        if(getList!=\"\"){\r\n            newSetList((oldvalue)=>{\r\n                return [...oldvalue,getList]\r\n            })\r\n        }else{\r\n            return false;\r\n        }\r\n\r\n        setList(\"\");\r\n    }\r\n\r\n    const removeList=(e)=>{\r\n        newSetList((oldvalue)=>{\r\n            return oldvalue.filter((value,index)=>{\r\n                return index!==e;\r\n            })\r\n        })\r\n    }\r\n\r\n    let date = new Date().toLocaleDateString();\r\n\r\n    return (\r\n          <div class=\"ctm-container\"> \r\n            <h1>{date}</h1>\r\n            <div class=\"add-section\">\r\n                <TextField id=\"standard-basic\" value={getList} label=\"Add List\" name=\"list\" onChange={fetchValue}/>\r\n                    <AddCircleSharpIcon  color=\"primary\" onClick={addList}/>\r\n            </div>\r\n\r\n            <div class=\"list-section\">\r\n               <ul>\r\n                    {newGetList.map((value,index)=>{\r\n                    return(\r\n                           <div class=\"list\">\r\n                               <li>{value}</li>\r\n                               <HighlightOffSharpIcon  color=\"secondary\" onClick={()=>removeList(index)} />\r\n                           </div> \r\n                    )\r\n                    })}\r\n               </ul> \r\n             </div>  \r\n          </div> \r\n    )\r\n}\r\n\r\nexport default Test;","import React from 'react';\r\nimport './App.css';\r\nimport Test from './Test';\r\n\r\nconst App=()=>{\r\n    return(\r\n        <>\r\n            <Test/>    \r\n        </>\r\n    )\r\n}\r\n\r\nexport default App;","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App/>\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n\r\n"],"sourceRoot":""}